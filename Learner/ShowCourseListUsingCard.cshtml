@model LMS.Models.CourseData
@{
    Layout = null;
    var learnerObj = ViewBag.learnerModel;
    var moduleList = ViewBag.ModuleList as List<LMS.Models.ModuleData>;
    var courseInfo = ViewBag.Course;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>LMS : Learner_AssignedCourseDetails</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="~/Content/SideBar-Navbar/navbarcommon.css" rel="stylesheet" />
    <style>
        .icon-link {
            display: inline-flex;
            align-items: center;
            text-decoration: none;
            color: inherit;
            margin-left: auto;
        }
    </style>
</head>
<body>

    @Html.Partial("_LearnerModals")
    <!--sidebar -->
    <nav>
        <div class="logo_name">

            <span class="logo_name">Dashboard</span>
        </div>
        <ul>

            <li>
                <a href="#" data-bs-toggle="modal" data-bs-target="#LearnerView">
                    <i class="fa-solid fa-eye"></i>
                    <span class="link-name"> View Profile</span>
                </a>
            </li>

            <li>
                <a href="#" data-bs-toggle="modal" data-bs-target="#LearnerEdit">
                    <i class="fa-solid fa-user-pen"></i>
                    <span class="link-name"> Edit Profile</span>
                </a>
            </li>
            <li>
                <a href="@Url.Action("LearnerPanel", "Learner")">
                    <i class="fa-solid fa-chalkboard-user"></i>
                    <span class="link-name">Dashboard</span>
                </a>
            </li>

            <li>
                <a href="@Url.Action("LearnerCourses","Learner")">
                    <i class="fa-solid fa-book"></i>
                    <span class="link-name"> Courses</span>
                </a>
            </li>
        </ul>
        <div class="logout">
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#LearnerLogout">
                Logout
            </button>

        </div>
    </nav>

    <!--Banner -->

    <section class="dashboard">
        <div class="top">
            <i class="company-logo">
                <img src="~/HomeBanner/lms_logo-removebg-preview.png" />
            </i>

            <div class="profile">
                <span class="link-name mx-4">@learnerObj.LearnerName </span>

                <img src="~/HomeBanner/blank-profile-picture-973460_1280.png" alt="Profile Picture" />
            </div>
        </div>


        <!--Course details-->
        <div class="container-fluid mt-1" style="background-color:lightgray; border-radius:5px 5px 5px 5px;">
            <h1>@Model.CourseName</h1>
            <p>Course Code: @Model.CourseCode</p>
            <p>Description: @Model.CourseDescription</p>
        </div>

        <!--course details accordions-->

        <div class="accordion accordion-flush" id="accordionFlushExample">
            @foreach (var module in moduleList)
            {
                <div class="accordion-item">
                    <h2 class="accordion-header d-flex justify-content-between align-items-center" id="flush-heading-@module.ModuleId">



                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-@module.ModuleId" aria-expanded="false" aria-controls="flush-collapse-@module.ModuleId">
                            @module.ModuleName
                        </button>
                    </h2>
                    <div id="flush-collapse-@module.ModuleId" class="accordion-collapse collapse" aria-labelledby="flush-heading-@module.ModuleId" data-bs-parent="#accordionFlushExample">
                        <div class="accordion-body">
                            @if (module.SubModules != null && module.SubModules.Any())
                            {
                                foreach (var submodule in module.SubModules)
                                {
                                    <div>
                                        <h5>
                                            @if (!string.IsNullOrEmpty(submodule.FileUrl))
                                            {
                                                <a href="@Url.Content(submodule.FileUrl)" target="_blank"><i class="fa-solid fa-file"></i><span class="mx-1"></span>@submodule.SubmoduleName</a>


                                            }
                                            else
                                            {
                                                @submodule.SubmoduleName
                                                <span class="text-muted">(No file available)</span>
                                            }
                                        </h5>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No submodules available.</p>
                            }
                        </div>

                    </div>
                </div>
            }
        </div>

    </section>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script>
         $(document).ready(function () {

       // Handle learner Logout
       $("#logoutButton").click(function (e) {
           e.preventDefault();
           $.ajax({
               url: '@Url.Action("LearnerLogout", "Learner")',
               type: 'POST',
               success: function (response) {
                   if (response.success) {

                       window.location.href = '@Url.Action("Welcome", "Home")';
                   } else {
                       alert(response.message);
                   }
               },
               error: function (xhr, status, error) {
                   alert("An error occurred: " + error);
               }
           });
       });

     //edit modal refresh
     $("#closebtn").click(function () {
         $("#LearnerEditForm")[0].reset();
         window.location.reload();
     })

     // Handle learner Edit Form submission
     $("#LearnerUpdateBtn").click(function (e) {
         e.preventDefault();

         if ($("#LearnerEditForm").valid()) {
             var formData = new FormData($("#LearnerEditForm")[0]);

             $.ajax({
                 url: $("#LearnerEditForm").attr("action"),
                 type: $("#LearnerEditForm").attr("method"),
                 data: formData,
                 processData: false,
                 contentType: false,
                 success: function (response) {
                     showEditMessage(response.message);
                 },
                 error: function (response) {
                     var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                     showEditMessage(errorMessage);
                 }
             });
         }
     });



    /*edit modal validation*/
     $("#LearnerEdit").validate({
         errorClass: "error",
         rules: {

             LearnerEditName: {
                 required: true,
                 minlength: 3,
                 maxlength: 20
             },
             LearnerEditEmail: {
                 required: true,
                 email: true
             },
             LearnerEditPassword: {
                 required: true,
                 minlength: 6
             }
         },

         messages: {
             LearnerEditName: {
                 required: "Name field cannot be empty",
                 minlength: "Name must  of 3 characters",
                 maxlength: "Name must not exceed 20 characters"
             },
             LearnerEditEmail: {
                 required: "Email field cannot be empty",
                 email: "Please enter valid email"
             },
             LearnerEditPassword: {
                 required: "Password field cannot be empty",
                 minlength:"length of must of 6 characters or more"
             }
         }

     });

     // Display message after learner Edit form submission
     function showEditMessage(message) {

         $("#LearnerEditMsgModal #LearnerEditMsg").text(message);
         $("#LearnerEdit").modal("hide");
         $("#LearnerEditMsgModal").modal("show");


     }
 });
    </script>
</body>
</html>
