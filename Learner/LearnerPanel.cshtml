@{
    Layout = null;
    var learnerObj = ViewBag.Learner;
    var courseList = ViewBag.Courses as List<LMS.Models.CourseData>;

}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>LMS : Learner_Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="~/Content/SideBar-Navbar/navbarcommon.css" rel="stylesheet" />
    <style>
        .card {
            cursor: pointer;
            transition: transform 0.2s ease-in-out;
            max-width: 300px;
            margin: 2px;
            background-color: #D1E9F6;
        }


        .card-title {
            font-size: 1.25rem;
            font-weight: bold;
        }

        .card-subtitle {
            font-size: 1rem;
            color: #6c757d;
        }

        .card-text {
            font-size: 0.875rem;
            color: #495057;
        }
    </style>

</head>
<body>

    <!--sidebar -->
    <nav>
        <div class="logo_name">

            <span class="logo_name">Dashboard</span>
        </div>
        <ul>
            <li>
                <a href="#" data-bs-toggle="modal" data-bs-target="#LearnerView">
                    <i class="fa-solid fa-eye"></i>
                    <span class="link-name"> View Profile</span>
                </a>
            </li>

            <li>
                <a href="#" data-bs-toggle="modal" data-bs-target="#LearnerEdit">
                    <i class="fa-solid fa-user-pen"></i>
                    <span class="link-name"> Edit Profile</span>
                </a>
            </li>
        </ul>
        <div class="logout">
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#LearnerLogout">
                Logout
            </button>

        </div>
    </nav>

    <!--Banner -->

    <section class="dashboard">
        <div class="top">
            <i class="company-logo">
                <img src="~/HomeBanner/lms_logo-removebg-preview.png" />
            </i>

            <div class="profile">
                <span class="link-name mx-4">@learnerObj.LearnerName </span>

                <img src="~/HomeBanner/blank-profile-picture-973460_1280.png" alt="Profile Picture" />
            </div>
        </div>

        <!-- Courses displayed as cards -->
        <div class="container mt-3">
            <div class="d-flex align-items-center">
                <label class="m-1">Search Your Courses: </label>
                <input id="myInput" class="form-control m-1" autocomplete="off" onkeyup="Searchitem()" style="max-width:500px;" />
            </div>

            <table class="table table-bordered" style="border-color:lightsteelblue;" id="myTable">
                <thead>
                    <tr>
                        <th></th>
                        <th>Course Details</th>

                    </tr>
                </thead>
                <tbody>
                    @if (courseList != null && courseList.Any())
                    {
                        foreach (var course in courseList)
                        {
                            <tr>
                                <td onclick="handleCardClick('@course.CourseCode', '@course.CourseId', '@course.CourseName', '@course.CourseDescription')">
                                    <img src="~/HomeBanner/CourseImageBanner.jpg" alt="Course Image" class="img-fluid" style="width:150px; height:150px;" />
                                </td>
                                <td onclick="handleCardClick('@course.CourseCode', '@course.CourseId', '@course.CourseName', '@course.CourseDescription')">
                                    <h3 class="card-title">@course.CourseName</h3>
                                    <h4 class="card-subtitle mb-2">@course.CourseDescription</h4>
                                    <p class="card-text">Duration: @course.CourseDuration hours</p>
                                    <p class="card-text">Language: @course.CourseLanguage</p>
                                    <p class="card-text">Category: @course.CourseCategory</p>
                                    <p class="card-text">CourseCode: @course.CourseCode</p>
                                </td>

                            </tr>
                        }
                    }
                    else
                    {
                        // No rows rendered here; this will be handled by the other div.
                    }
                </tbody>
            </table>
        </div>

        <!-- No Courses Available Message -->
        <div id="noCoursesMessage" class="container mt-3" style="display: @(courseList == null || !courseList.Any() ? "block" : "none");">
            <h2>No Course Available</h2>
        </div>

    </section>

    <!-- Learner View Modal -->
    <div class="modal fade" id="LearnerView" tabindex="-1" aria-labelledby="LearnerViewLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #3ABEF9; color: white;">
                    <h5 class="modal-title" id="LearnerViewLabel">Learner Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="LearnerName" class="form-label">Name:</label>
                        <p id="LearnerName" class="form-text">@learnerObj.LearnerName</p>
                    </div>
                    <br />
                    <div class="mb-3">
                        <label for="LearnerEmail" class="form-label">Email:</label>
                        <p id="LearnerEmail" class="form-text">@learnerObj.LearnerEmail</p>
                    </div>
                    <br />
                    <div class="mb-3">
                        <label for="LearnerPassword" class="form-label">Password:</label>
                        <p id="LearnerPassword" class="form-text">@learnerObj.LearnerPassword</p>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- Learner Edit Modal -->
    <div class="modal fade" id="LearnerEdit" tabindex="-1" aria-labelledby="LearnerEditLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #3ABEF9; color: white;">
                    <h5 class="modal-title" id="LearnerEditLabel">Edit Your Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="closebtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="LearnerEditForm" method="post" action="@Url.Action("UpdateLearner","Learner")">
                        <div class="mb-3">
                            <label for="LearnerNameEdit" class="form-label">Name:</label>
                            <input type="text" id="LearnerNameEdit" class="form-control" name="LearnerEditName" value="@learnerObj.LearnerName" autocomplete="off" />
                        </div>

                        <div class="mb-3">
                            <label for="LearnerPasswordEdit" class="form-label">Password:</label>
                            <input type="password" id="LearnerPasswordEdit" class="form-control" name="LearnerEditPassword" value="@learnerObj.LearnerPassword" autocomplete="off" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">

                    <button type="submit" form="LearnerEditForm" class="btn btn-warning" id="LearnerUpdateBtn">Update</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Learner Logout Modal -->
    <div class="modal fade" id="LearnerLogout" tabindex="-1" aria-labelledby="LearnerLogoutLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #3ABEF9; color: white;">
                    <h6>Sure To Logout?</h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-danger" id="logoutButton">Logout</button>
                </div>
            </div>
        </div>
    </div>


    <!-- learner Edit Message Modal -->
    <div class="modal fade" id="LearnerEditMsgModal" tabindex="-1" aria-labelledby="LearnerEditMsgModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="LearnerEditMsgModalLabel">Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="msgclosebtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="LearnerEditMsg"></p>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script>


          // Search table items
          function Searchitem() {
            var input = document.getElementById("myInput").value.toLowerCase();
            var rows = document.querySelectorAll("#myTable tbody tr");

            rows.forEach(function (row) {
                  var courseDetails = row.querySelector("td:nth-child(2)").textContent.toLowerCase();
                    if (courseDetails.includes(input)) {
                        row.style.display = "";
                          } else {
                        row.style.display = "none";
                    }
              });
          }


        // Function to handle card click and redirect
        function handleCardClick(courseCode, courseId, courseName, courseDescription) {
            var redirectUrl = '@Url.Action("ShowCourseListUsingCard", "Learner")' +
                '?courseId=' + encodeURIComponent(courseId) +
                '&courseCode=' + encodeURIComponent(courseCode) +
                '&courseName=' + encodeURIComponent(courseName) +
                '&courseDescription=' + encodeURIComponent(courseDescription);

            window.location.href = redirectUrl;
        }



        $(document).ready(function () {

              // Handle learner Logout
              $("#logoutButton").click(function (e) {
                  e.preventDefault();
                  $.ajax({
                      url: '@Url.Action("LearnerLogout", "Learner")',
                      type: 'POST',
                      success: function (response) {
                          if (response.success) {
                             
                              window.location.href = '@Url.Action("Welcome", "Home")'; 
                          } else {
                              alert(response.message);
                          }
                      },
                      error: function (xhr, status, error) {
                          alert("An error occurred: " + error);
                      }
                  });
              });

            //edit modal refresh
            $("#closebtn").click(function () {
                $("#LearnerEditForm")[0].reset();
                window.location.reload();
            })

            // Handle learner Edit Form submission
            $("#LearnerUpdateBtn").click(function (e) {
                e.preventDefault();

                if ($("#LearnerEditForm").valid()) {
                    var formData = new FormData($("#LearnerEditForm")[0]);

                    $.ajax({
                        url: $("#LearnerEditForm").attr("action"),
                        type: $("#LearnerEditForm").attr("method"),
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            showEditMessage(response.message);
                        },
                        error: function (response) {
                            var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                            showEditMessage(errorMessage);
                        }
                    });
                }
            });



           /*edit modal validation*/
            $("#LearnerEdit").validate({
                errorClass: "error",
                rules: {

                    LearnerEditName: {
                        required: true,
                        minlength: 3,
                        maxlength: 20
                    },
                    LearnerEditEmail: {
                        required: true,
                        email: true
                    },
                    LearnerEditPassword: {
                        required: true,
                        minlength: 6
                    }
                },

                messages: {
                    LearnerEditName: {
                        required: "Name field cannot be empty",
                        minlength: "Name must  of 3 characters",
                        maxlength: "Name must not exceed 20 characters"
                    },
                    LearnerEditEmail: {
                        required: "Email field cannot be empty",
                        email: "Please enter valid email"
                    },
                    LearnerEditPassword: {
                        required: "Password field cannot be empty",
                        minlength:"length of must of 6 characters or more"
                    }
                }

            });

            // Display message after learner Edit form submission
            function showEditMessage(message) {

                $("#LearnerEditMsgModal #LearnerEditMsg").text(message);
                $("#LearnerEdit").modal("hide");
                $("#LearnerEditMsgModal").modal("show");


            }
        });

    </script>
</body>
</html>
