
@{
    Layout = null;
    var adminModel = ViewBag.AdminModel;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LMS : Admin_Instructor</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link href="~/Content/SideBar-Navbar/navbarcommon.css" rel="stylesheet" />

</head>
<body>
    <nav>
        <div class="logo_name">

            <span class="logo_name mx-4">ADMIN</span>
        </div>
        <ul>
            <li>
                <a href="@Url.Action("AdminPanel", "Admin")">
                    <i class="uil uil-estate"></i>
                    <span class="link-name">Home</span>
                </a>

            </li>
            <li>

                <a href="#" class="" data-bs-toggle="modal" data-bs-target="#AdminViewModal">
                    <i class="fa-solid fa-eye"></i>
                    <span class="link-name"> View Profile</span>
                </a>
            </li>

            <li>
                <a href="#" class="" data-bs-toggle="modal" data-bs-target="#AdminEditModal">
                    <i class="fa-solid fa-user-pen"></i>
                    <span class="link-name">Edit Profile</span>
                </a>
            </li>



            <li>
                <a href="@Url.Action("Admin_Learner", "Admin")">
                    <i class="uil uil-user-plus"></i>
                    <span class="link-name">Learners</span>
                </a>
            </li>
            <li>

                <a href="#">
                    <i class="fa-solid fa-folder-plus"></i>
                    <span class="link-name"> Add Course</span>
                </a>
            </li>
            <li>
                <a href="@Url.Action("Admin_courses", "Admin")">
                    <i class="uil uil-book"></i>
                    <span class="link-name">Courses</span>
                </a>
            </li>



        </ul>
        <div class="logout">
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#AdminLogout">
                Logout
            </button>
        </div>

    </nav>

    <section class="dashboard">
        <div class="top">
            <i class="company-logo">
                <img src="~/HomeBanner/lms_logo-removebg-preview.png" />
            </i>

            <div class="profile">
                <span class="link-name mx-5"> @adminModel.Admin_Name</span>
                <img src="~/HomeBanner/blank-profile-picture-973460_1280.png" />
            </div>
        </div>

        <div class="card mt-2">
            <div class="card-header" style="background-color: #3ABEF9; color: white;">Instructors List</div>
            <div class="card-body">
                <table class="table" id="instructor-table">
                    <thead>
                        <tr>
                            <th scope="col">Instructor_Id</th>
                            <th scope="col">Instructor_Name</th>

                            <th scope="col">Instructor_Mail</th>
                            <th scope="col">Instructor_Password</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>

                        <tr>
                            <th></th>
                            <td></td>

                            <td></td>
                            <td></td>
                            <td>
                                <button class="btn btn-warning"
                                        data-bs-toggle="modal"
                                        data-bs-target="#AdminInstructorEdit"
                                        data-id=""
                                        data-name=""
                                        data-email=""
                                        data-password="">
                                    Edit
                                </button>
                                <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#AdminInstructorDelete"
                                        data-email=""
                                        data-id="">
                                    Delete
                                </button>
                            </td>
                        </tr>

                    </tbody>
                </table>
            </div>
        </div>
    </section>

    @Html.Partial("_AdminModals")

    @* Admin Instructor Edit Modal *@
    <!--<div class="modal fade" id="AdminInstructorEdit" tabindex="-1" aria-labelledby="AdminInstructorEditLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AdminInstructorEditLabel">Edit Instructor Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="AdminInstructorEditForm" method="post" action="@Url.Action("AdminInstructUpdate", "Admin")">
                        <input type="hidden" id="OriginalInstructorId" name="OriginalInstructorId" />
                        <input type="hidden" id="OriginalInstructorEmail" name="OriginalInstructorEmail" />
                        <input type="hidden" id="OriginalInstructorPassword" name="OriginalInstructorPassword" />
                        <div class="mb-3">
                            <label for="AdminInstructorNameEdit" class="form-label">Name:</label>
                            <input type="text" id="AdminInstructorNameEdit" class="form-control" name="AdminInstructName" autocomplete="off" required />
                        </div>

                        <div class="mb-3">
                            <label for="AdminInstructorEmailEdit" class="form-label">Email:</label>
                            <input type="email" id="AdminInstructorEmailEdit" class="form-control" name="AdminInstructEmail" autocomplete="off" required />
                        </div>
                        <div class="mb-3">
                            <label for="AdminInstructorPasswordEdit" class="form-label">Password:</label>
                            <input type="password" id="AdminInstructorPasswordEdit" class="form-control" name="AdminInstructPassword" autocomplete="off" required />
                        </div>
                        <div class="text-end">
                            <button type="submit" class="btn btn-warning" id="adminInsbtnUpdate">Update</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>-->
    @* Admin Instructor Delete Modal *@
    <!--<div class="modal fade" id="AdminInstructorDelete" tabindex="-1" aria-labelledby="AdminInstructorDeleteLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AdminInstructorDeleteLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="closebtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="AdminInstructorDeleteForm" method="post" action="@Url.Action("DeleteAdminInstructController", "Admin")">
                        <input type="hidden" id="InstructorEmailDelete" name="InstructorEmail" />
                        <input type="hidden" id="InstructorIdDelete" name="InstructorId" />
                        <p>Are you sure you want to delete this instructor?</p>
                        <div class="text-end">
                            <button type="submit" class="btn btn-danger" id="adminInsbtnDel">Delete</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>-->
    <!-- Admin Ins Message Modal -->
    <!--<div class="modal fade" id="AdminInsMsgModal" tabindex="-1" aria-labelledby="AdminInsMsgModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AdminInsMsgModalLabel">Message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="closebtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">-->
    <!-- Success/Failure message will be injected here -->
    <!--</div>
            </div>
        </div>
    </div>-->

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>


    <script>
        $(document).ready(function () {
           /* $('#AdminInstructorEdit').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var id = button.data('id');
                var name = button.data('name');
                var email = button.data('email');
                var password = button.data('password');

                var modal = $(this);
                modal.find('#OriginalInstructorId').val(id);
                modal.find('#AdminInstructorNameEdit').val(name);
                modal.find('#AdminInstructorEmailEdit').val(email);
                modal.find('#AdminInstructorPasswordEdit').val(password);
                modal.find('#OriginalInstructorEmail').val(email);
                modal.find('#OriginalInstructorPassword').val(password);
            });

            // Handle the update form submission
            $("#AdminInstructorEditForm").submit(function (e) {
                e.preventDefault();

                var formData = new FormData($(this)[0]);

                $.ajax({
                    url: $(this).attr("action"),
                    type: $(this).attr("method"),
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        $("#AdminInstructorEdit").modal("hide");
                        $("#AdminInsMsgModal .modal-body").text(response.message);
                        $("#AdminInsMsgModal").modal("show");
                    },
                    error: function (response) {
                        var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                        $("#AdminInstructorEdit").modal("hide");
                        $("#AdminInsMsgModal .modal-body").text(errorMessage);
                        $("#AdminInsMsgModal").modal("show");
                    }
                });
            });

            // Populate delete modal with instructor data
            $('#AdminInstructorDelete').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var id = button.data('id');
                var email = button.data('email');

                var modal = $(this);
                modal.find('#InstructorIdDelete').val(id);
                modal.find('#InstructorEmailDelete').val(email);
            });

            // Handle the delete button click
            $("#AdminInstructorDeleteForm").submit(function (e) {
                e.preventDefault();

                $.ajax({
                    url: $(this).attr("action"),
                    type: $(this).attr("method"),
                    data: $(this).serialize(),
                    success: function (response) {
                        $("#AdminInstructorDelete").modal("hide");
                        $("#AdminInsMsgModal .modal-body").text(response.message);
                        $("#AdminInsMsgModal").modal("show");
                    },
                    error: function (response) {
                        var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                        $("#AdminInstructorDelete").modal("hide");
                        $("#AdminInsMsgModal .modal-body").text(errorMessage);
                        $("#AdminInsMsgModal").modal("show");
                    }
                });
            });

            // Refresh the page on modal close
            $("#AdminInsMsgModal").on('hidden.bs.modal', function () {
                window.location.reload();
            });

            // Admin Instructor form validation
            $("#AdminInstructorEditForm").validate({
                errorClass: "error",
                rules: {
                    AdminInstructName: {
                        required: true,
                        minlength: 3,
                        maxlength: 30
                    },
                    AdminInstructEmail: {
                        required: true,
                        email: true
                    },
                    AdminInstructPassword: {
                        required: true,
                        minlength: 6
                    }
                },
                messages: {
                    AdminInstructName: {
                        required: "Name field cannot be empty",
                        minlength: "Name must be at least 3 characters long",
                        maxlength: "Name must not exceed 30 characters"
                    },
                    AdminInstructEmail: {
                        required: "Email field cannot be empty",
                        email: "Please enter a valid email"
                    },
                    AdminInstructPassword: {
                        required: "Password field cannot be empty",
                        minlength: "Password must be at least 6 characters long"
                    }
                }
            });

            // Refresh the page on modal close
            $(".btn-close").click(function () {
                window.location.reload();
            });

            // Sidebar toggle
            const body = document.querySelector("body");
            const sidebar = document.querySelector("nav");
            const sidebarToggle = document.querySelector(".top .uil-bars");

            sidebarToggle.addEventListener("click", () => {
                sidebar.classList.toggle("close");
                body.classList.toggle("sidebar-close");
            });*/
                // Populate Edit Modal with current admin details
    $('#AdminEditModal').on('show.bs.modal', function () {
        var modal = $(this);
        modal.find('#AdminNameEdit').val('@adminModel.Admin_Name');
        modal.find('#AdminPasswordEdit').val('@adminModel.Admin_password');
    });

    // Handle Admin Edit Form submission
    $("#AdminEditModalUpdate").click(function (e) {
        e.preventDefault();

        if ($("#adminEditForm").valid()) {
            var formData = new FormData($("#adminEditForm")[0]);

            $.ajax({
                url: $("#adminEditForm").attr("action"),
                type: $("#adminEditForm").attr("method"),
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    showEditMessage(response.message);
                },
                error: function (response) {
                    var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                    showEditMessage(errorMessage);
                }
            });
        }
    });

    // Admin Edit Form validation
    $("#adminEditForm").validate({
        errorClass: "error",
        rules: {
            AdminName: {
                required: true,
                minlength: 3,
                maxlength: 20
            },
            AdminPassword: {
                required: true,
                minlength: 6
            }
        },
        messages: {
            AdminName: {
                required: "Name field cannot be empty",
                minlength: "Name must be at least 3 characters",
                maxlength: "Name must not exceed 20 characters"
            },
            AdminPassword: {
                required: "Password field cannot be empty",
                minlength: "Password must be at least 6 characters"
            }
        }
    });

    // Reset and reload Admin Edit Form
    $("#closebtn").click(function () {
        $("#adminEditForm")[0].reset();
        window.location.reload();
    });

    // Handle Admin Logout
    $("#logoutButton").click(function () {
        $.ajax({
            url: '@Url.Action("Adminlogout", "Admin")',
            type: 'POST',
            success: function (response) {
                if (response.success) {
                    // Redirect to login page
                    window.location.href = '@Url.Action("Welcome", "Home")'; // Adjust to your login route
                } else {
                    alert(response.message);
                }
            },
            error: function (xhr, status, error) {
                alert("An error occurred: " + error);
            }
        });
    });

    // Display message after Admin Edit form submission
    function showEditMessage(message) {
        $("#AdminEditMsgModal #AdminEditMsg").text(message);
        $("#AdminEditModal").modal("hide");
        $("#AdminEditMsgModal").modal("show");
    }


/*=====================================================================================*/
     document.querySelector(".uil-bars").addEventListener("click", () => {
         document.querySelector("nav").classList.toggle("close");
         document.querySelector(".dashboard").classList.toggle("close");
     });

 /*=====================================================================================*/



     const body = document.querySelector("body");
     const sidebar = document.querySelector("nav");
     const sidebarToggle = document.querySelector(".top .uil-bars");

     sidebarToggle.addEventListener("click", () => {
         sidebar.classList.toggle("close");
         body.classList.toggle("sidebar-close");
     });

     // Example function to dynamically load data
     function loadDashboardData() {
         // Placeholder code for loading data dynamically (e.g., via AJAX)
         console.log("Loading dashboard data...");
     }

     // Call the function to load data
     loadDashboardData();









        });
    </script>


</body>
</html>
