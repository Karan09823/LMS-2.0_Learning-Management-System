@model LMS.Models.CourseData
@{
    Layout = null;
    var adminModel = ViewBag.AdminModel;
    var moduleList = ViewBag.ModuleList as List<LMS.Models.ModuleData>;
    var courseInfo = ViewBag.Course;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Admin - Course Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="~/Content/SideBar-Navbar/navbarcommon.css" rel="stylesheet" />
    <style>
      
        .form-control {
            width: 400px;
        }

        .container {
            max-width: 960px;
        }

        .button-container {
            display: flex;
            gap: 10px;
        }

        .icon-link {
            display: inline-flex;
            align-items: center;
            text-decoration: none;
            color: inherit;
            margin-left: auto;
        }

        .accordion-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .accordion-button {
            margin-left: 0;
        }

        .btn-warning, .btn-danger {
            margin-left: 10px;
        }


        .btn-sm {
            padding: 0.2rem 0.5rem;
        }
    </style>
</head>
<body>

    @Html.Partial("_AdminLayout")
    @Html.Partial("_AdminModals")

    <section class="dashboard">
        <div class="top">
            <i class="company-logo">
                <img src="~/HomeBanner/lms_logo-removebg-preview.png" />
            </i>

            <div class="profile">
                <span class="link-name mx-4">@adminModel.Admin_Name</span>

                <img src="~/HomeBanner/blank-profile-picture-973460_1280.png" alt="Profile Picture" />
            </div>
        </div>

        <!--course details-->
        <div class="container-fluid mt-1" style="background-color:lightgray; border-radius:5px 5px 5px 5px;">
            <h1>@Model.CourseName</h1>
            <p>Course Code: @Model.CourseCode</p>
            <p>Description: @Model.CourseDescription</p>
        </div>

        <!--add module section-->
        <div class="container p-2 mx-0 mb-2 rounded shadow-sm bg-white" style="max-width:740px;">
            <h5 class="mx-3">Add Module</h5>
            <form id="AddModuleform" class="d-flex align-items-center" method="post" action="@Url.Action("AddCourseModuleByAdmin","Admin")">
                <input type="hidden" name="AddModuleCourseid" value="@Model.CourseId" />
                <label class="mx-3 mb-2">Enter Module Name:</label>
                <input type="text" class="form-control" name="AddModuleName" required autocomplete="off" />
                <button class="btn btn-success mx-3">Add Module</button>
            </form>
        </div>

        <!--displaying modules and submodules using accordions-->
        <div class="accordion accordion-flush mx-0" id="accordionFlushExample" style="color:whitesmoke">
            @foreach (var module in moduleList)
            {
                <div class="accordion-item">
                    <h2 class="accordion-header d-flex justify-content-between align-items-center" id="flush-heading-@module.ModuleId">

                        <div class="d-flex align-items-center">
                            <button class="btn-sm btn-warning me-2" data-bs-toggle="modal" data-bs-target="#updateModuleModal" onclick="openUpdateModal('@module.ModuleId', '@module.ModuleName', '@Model.CourseId')">Update</button>
                            <button class="btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModuleModal" onclick="openDeleteModal('@module.ModuleId', '@Model.CourseId')">Delete</button>
                        </div>

                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-@module.ModuleId" aria-expanded="false" aria-controls="flush-collapse-@module.ModuleId">
                            @module.ModuleName
                        </button>
                    </h2>
                    <div id="flush-collapse-@module.ModuleId" class="accordion-collapse collapse" aria-labelledby="flush-heading-@module.ModuleId" data-bs-parent="#accordionFlushExample">
                        <div class="accordion-body">
                            @if (module.SubModules != null && module.SubModules.Any())
                            {
                                foreach (var submodule in module.SubModules)
                                {
                                    <div>
                                        <h5>
                                            @if (!string.IsNullOrEmpty(submodule.FileUrl))
                                            {

                                                <table class="table">

                                                    <tbody>
                                                        <tr>
                                                            <td>
                                                                <a href="@Url.Content(submodule.FileUrl)" target="_blank">
                                                                    <i class="fa-solid fa-file"></i>
                                                                    <span class="mx-1"></span>
                                                                    @submodule.SubmoduleName
                                                                </a>
                                                            </td>
                                                            <td>
                                                                <div class="d-flex justify-content-end ">

                                                                    <button class="btn-sm btn-warning"
                                                                            data-bs-toggle="modal"
                                                                            data-bs-target="#updateSubModuleModal"
                                                                            onclick="PopulateSubmodule('@submodule.SubmoduleName','@module.ModuleId','@submodule.SubModuleId')">
                                                                        Update
                                                                    </button>
                                                                    <button class="btn-sm btn-danger"
                                                                            data-bs-toggle="modal"
                                                                            data-bs-target="#deleteSubModuleModal"
                                                                            onclick="openDeleteSubmodal('@module.ModuleId','@submodule.SubModuleId')">
                                                                        Delete
                                                                    </button>
                                                                </div>

                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>


                                            }
                                            else
                                            {
                                                @submodule.SubmoduleName
                                                <span class="text-muted">(No file available)</span>
                                            }
                                        </h5>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No submodules available.</p>
                            }
                        </div>

                        <!--add submodule section-->
                        <div class="mt-3">
                            <form method="post" id="SubmoduleForm" enctype="multipart/form-data" action="@Url.Action("AddSubmoduleByAdmin", "Admin")" class="d-flex align-items-center ">
                                <input type="hidden" name="ModuleId" value="@module.ModuleId" />
                                <input type="hidden" name="CourseID" value="@Model.CourseId" />
                                <div class="form-group mx-3 mb-2">
                                    <label for="subModuleName" class="form-label ">Submodule Name:</label>
                                    <input type="text" id="subModuleName" name="SubModuleName" class="form-control" required autocomplete="off" />
                                </div>
                                <div class="form-group mx-3 mb-2">
                                    <label for="resourceFile" class="form-label ">Resources:</label>
                                    <input type="file" id="resourceFile" name="ResourceFile" class="form-control" required autocomplete="off" />

                                </div>

                                <button type="submit" id="addResourceBtn" class="btn btn-success mt-4">Add Resource</button>


                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>

    </section>

    <!-- Update Module Modal -->
    <div class="modal fade" id="updateModuleModal" tabindex="-1" aria-labelledby="updateModuleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateModuleLabel">Update Module</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="updateModuleForm">
                        <div class="mb-3">
                            <input type="hidden" id="moduleId" name="moduleId" />
                            <input type="hidden" id="courseId" name="courseId" />
                            <label for="moduleName" class="form-label">Module Name</label>
                            <input type="text" class="form-control" style="max-width:470px;" id="moduleName" name="moduleName" required autocomplete="off" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-warning" onclick="submitUpdate()">Update</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Update SubModule Modal -->
    <div class="modal fade" id="updateSubModuleModal" tabindex="-1" aria-labelledby="updateSubModuleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateSubModuleLabel">Update SubModule</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p style="color:red; font-size:10px;  margin-left:10px;">* If you want to Update the SubmoduleName then You should also provide the previous uploaded file </p>
                    <form id="updateSubModuleForm" method="post" action="@Url.Action("UpdateSubmodule", "Admin")">
                        <div class="mb-3">
                            <input type="hidden" name="ModuleId" id="ModuleId" value="" />
                            <input type="hidden" name="SubModuleId" id="SubModuleId" value="" />
                            <label for="SubmoduleName" class="form-label">SubModule Name</label>
                            <input type="text" class="form-control" style="max-width:470px;" id="SubmoduleName" name="SubmoduleName" required autocomplete="off" />
                            <label for="SubmoduleFile" class="form-label mt-3">Update Resource</label>
                            <input type="file" class="form-control" style="max-width:470px;" id="SubmoduleFile" name="SubmoduleFile" required autocomplete="off" />
                        </div>
                    </form>

                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-warning" onclick="submitSubModuleUpdate()">Update</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Module Confirmation Modal -->
    <div class="modal fade" id="deleteModuleModal" tabindex="-1" aria-labelledby="deleteModuleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModuleLabel">Delete Module</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this module?
                </div>
                <div class="modal-footer">
                    <form id="deleteModuleForm">
                        <input type="hidden" id="deleteModuleId" name="moduleId" />
                        <input type="hidden" id="deleteCourseId" name="courseId" />
                    </form>

                    <button type="button" class="btn btn-danger" onclick="submitDelete()">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete SubModule Confirmation Modal -->
    <div class="modal fade" id="deleteSubModuleModal" tabindex="-1" aria-labelledby="deleteSubModuleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteSubModuleLabel">Delete Module</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this Submodule?
                </div>
                <div class="modal-footer">
                    <form id="deleteSubModuleForm">
                        <input type="hidden" id="deleteModuleId" name="moduleId" value="" />
                        <input type="hidden" id="deleteSubmoduleId" name="submoduleId" value="" />
                    </form>

                    <button type="button" class="btn btn-danger" onclick="DeleteSubModule()">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script>

        //update module modal
        function openUpdateModal(moduleId, moduleName, courseId) {
            document.getElementById("moduleId").value = moduleId;
            document.getElementById("moduleName").value = moduleName;
            document.getElementById("courseId").value = courseId;
        }

        //delete module modal
        function openDeleteModal(moduleId, courseId) {
            document.getElementById("deleteModuleId").value = moduleId;
            document.getElementById("deleteCourseId").value = courseId;
        }

        //update module section
        function submitUpdate() {
            var form = document.getElementById("updateModuleForm");
            var data = new FormData(form);

            fetch("@Url.Action("UpdateModule", "Admin")", {
                method: "POST",
                body: data
            })
            .then(response => {
                if (response.ok) {
                    $('#updateModuleModal').modal('hide');
                    alert("Module Update successfully ");

                    location.reload();
                } else {
                    $('#updateModuleModal').modal("hide");
                    alert("Failed to update module.");
                }
            })
            .catch(error => console.error('Error:', error));
        }

        //delete module section
        function submitDelete() {
            var form = document.getElementById("deleteModuleForm");
            var data = new FormData(form);

            fetch("@Url.Action("DeleteModule", "Admin")", {
                method: "POST",
                body: data
            })
            .then(response => {
                if (response.ok) {
                    $('#deleteModuleModal').modal("hide");
                    alert("Module deleted successfully.");
                    location.reload();
                } else {
                    $('#deleteModuleModal').modal('hide');
                    alert("Failed to delete module.");
                }
            })
            .catch(error => console.error('Error:', error));
        }

        //update submodule section
        function submitSubModuleUpdate() {
            var form = document.getElementById("updateSubModuleForm");
            var data = new FormData(form);

            fetch("@Url.Action("UpdateSubmodule", "Admin")", {
                method: "POST",
                body: data
            })
            .then(response => {
                if (response.ok) {
                    $('#updateSubModuleModal').modal('hide');
                    alert("Submodule updated successfully.");
                    location.reload();
                } else {
                    return response.json().then(data => {
                        alert(data.message || "Failed to update submodule.");
                    });
                }
            })
            .catch(error => console.error('Error:', error));
        }

  //delete submodule section
  function DeleteSubModule() {
     
     var moduleId = document.getElementById("deleteModuleId").value;
     var submoduleId = document.getElementById("deleteSubmoduleId").value;

     
     var formData = new FormData();
     formData.append("moduleId", moduleId);
     formData.append("submoduleId", submoduleId);

     
     fetch('@Url.Action("DeleteSubmodule", "Admin")', {
         method: 'POST',
         body: formData
     })
     .then(response => response.json())
     .then(result => {
         if (result.success) {
             $('#deleteSubModuleModal').modal("hide");
             alert(result.message);
             location.reload();
         } else {
             $('#deleteSubModuleModal').modal('hide');
             alert(result.message);
             location.reload();
         }
     })
     .catch(error => {
         console.error('Error:', error);
         $('#deleteSubModuleModal').modal('hide');
         alert('An error occurred while deleting the submodule.');
     });
 }
        //populate submodule data modal function
        function PopulateSubmodule(submodulename,moduleid,submoduleid) {
            document.getElementById("SubmoduleName").value = submodulename;
            document.getElementById("SubModuleId").value = submoduleid;
            document.getElementById("ModuleId").value = moduleid;
        }

        //delete submodule data modal function
        function openDeleteSubmodal(moduleid, submoduleid) {
            document.getElementById("deleteModuleId").value = moduleid;
            document.getElementById("deleteSubmoduleId").value = submoduleid;
        }


        $(document).ready(function () {
            //add module section
            $('#AddModuleform').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var formData = new FormData(form[0]);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert(response.message);
                    }, error: function (xhr, status, error) {
                        alert("Error occured"+error);
                    }

                });

            })


            //add submodule section
            $('#SubmoduleForm').on('submit', function (e) {
                e.preventDefault();

                var form = $(this);
                var formData = new FormData(form[0]);

                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert(response.message);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error occurred: ", error);
                    }
                });
            });

        });




         $(document).ready(function () {

     // Populate Edit Modal with current admin details
     $('#AdminEditModal').on('show.bs.modal', function () {
         var modal = $(this);
         modal.find('#AdminNameEdit').val('@adminModel.Admin_Name');
         modal.find('#AdminPasswordEdit').val('@adminModel.Admin_password');
     });

     // Handle Admin Edit Form submission
     $("#AdminEditModalUpdate").click(function (e) {
         e.preventDefault();

         if ($("#adminEditForm").valid()) {
             var formData = new FormData($("#adminEditForm")[0]);

             $.ajax({
                 url: $("#adminEditForm").attr("action"),
                 type: $("#adminEditForm").attr("method"),
                 data: formData,
                 processData: false,
                 contentType: false,
                 success: function (response) {
                     showEditMessage(response.message);
                 },
                 error: function (response) {
                     var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                     showEditMessage(errorMessage);
                 }
             });
         }
     });

     // Admin Edit Form validation
     $("#adminEditForm").validate({
         errorClass: "error",
         rules: {
             AdminName: {
                 required: true,
                 minlength: 3,
                 maxlength: 20
             },
             AdminPassword: {
                 required: true,
                 minlength: 6
             }
         },
         messages: {
             AdminName: {
                 required: "Name field cannot be empty",
                 minlength: "Name must be at least 3 characters",
                 maxlength: "Name must not exceed 20 characters"
             },
             AdminPassword: {
                 required: "Password field cannot be empty",
                 minlength: "Password must be at least 6 characters"
             }
         }
     });

     // Reset and reload Admin Edit Form
     $("#closebtn").click(function () {
         $("#adminEditForm")[0].reset();
         window.location.reload();
     });

     // Handle Admin Logout
     $("#logoutButton").click(function () {
         $.ajax({
             url: '@Url.Action("Adminlogout", "Admin")',
             type: 'POST',
             success: function (response) {
                 if (response.success) {
                     // Redirect to login page
                     window.location.href = '@Url.Action("Welcome", "Home")'; // Adjust to your login route
                 } else {
                     alert(response.message);
                 }
             },
             error: function (xhr, status, error) {
                 alert("An error occurred: " + error);
             }
         });
     });

 });
    </script>
</body>
</html>
