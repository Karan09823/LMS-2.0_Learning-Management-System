
@{
    Layout = null;
    var instructorObject = ViewBag.Instructor;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>LMS : Instructor_AddCourse</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="~/Content/SideBar-Navbar/navbarcommon.css" rel="stylesheet" />
    <style>

        .container {
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            max-width: 800px;
            margin-top: 8px;
        }

        .module-container {
            margin-top: 5px;
        }

        .module-entry {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .submodule-entry {
            margin-top: 5px;
        }

        .dashboard {
            position: fixed;
        }
    </style>
</head>
<body>

    @Html.Partial("_InstructorModals")

    @Html.Partial("_InstructorLayout")

    <section class="dashboard">
        <div class="top">
            <i class="company-logo">
                <img src="~/HomeBanner/lms_logo-removebg-preview.png" />
            </i>
            <div class="profile">
                <span class="link-name mx-4">@instructorObject.InstructorName</span>
                <img src="~/HomeBanner/blank-profile-picture-973460_1280.png" alt="Profile Picture" />
            </div>
        </div>


        <!--add course section-->
        <div class="container" style="max-width:1200px;">
            <h2 class="">Add Course</h2>
            <form id="InstructorAddCourseForm" action="@Url.Action("AddModules","Instructor")" method="post">
                <div class="mb-3">
                    <label for="InstructorAddCourseTitle" class="form-label">Course Name:</label>
                    <input type="text" class="form-control" id="InstructorAddCourseTitle" name="CourseName" required autocomplete="off">
                </div>
                <div class="mb-3">
                    <label for="InstructorAddCourseDescription" class="form-label">Course Description:</label>
                    <textarea class="form-control" id="InstructorAddCourseDescription" name="CourseDescription" rows="2" required autocomplete="off"></textarea>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="InstructorAddCourseCode" class="form-label">Course Code:</label>
                        <input type="text" class="form-control" id="InstructorAddCourseCode" name="CourseCode" required autocomplete="off">
                    </div>
                    <div class="col-md-6">
                        <label for="InstructorAddCourseDuration" class="form-label">Course Duration:</label>
                        <input type="number" class="form-control" id="InstructorAddCourseDuration" name="CourseDuration" required autocomplete="off">
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="courseSelectLanguage" class="form-label">Course Language:</label>
                        <select class="form-select" id="courseSelectLanguage" name="CourseLanguage" required>
                            <option value="">Select Language</option>
                            <option value="English">English</option>
                            <option value="Hindi">Hindi</option>

                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="courseSelectCategory" class="form-label">Course Category:</label>
                        <select class="form-select" id="courseSelectCategory" name="CourseCategory" required>
                            <option value="">Select Category</option>
                            <option value="Beginner">Beginner</option>
                            <option value="Intermediate">Intermediate</option>
                            <option value="Advanced">Advanced</option>

                        </select>
                    </div>
                </div>
                <div id="modulesContainer" class="module-container">

                    <div class="module-entry">
                        <div class="mb-3">
                            <label for="ModuleName" class="form-label">Module Name:</label>
                            <input type="text" class="form-control" name="ModuleTitle[]" required autocomplete="off">
                        </div>
                        <div class="remove-module btn-danger text-center" style="display: none;">Remove Module</div>
                    </div>
                </div>
                <button type="button" class="btn btn-primary" id="add-module">Add Module</button>
                <button type="submit" class="btn btn-success ">Submit</button>
            </form>
        </div>
    </section>

  

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.21.0/jquery.validate.min.js" integrity="sha512-KFHXdr2oObHKI9w4Hv1XPKc898mE4kgYx58oqsc/JqqdLMDI4YjOLzom+EMlW8HFUd0QfjfAvxSL6sEq/a42fQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>


        $(document).ready(function () {

            $("#logoutButton").on('click', function () {
                $.ajax({
                    url: '@Url.Action("Instructorlogout", "Instructor")',
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            window.location.href = '@Url.Action("Welcome", "Home")';
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                    }
                });
            });

            // Instructor Edit Form Validation and Submission
            $("#InstructorEditForm").validate({
                errorClass: "error",
                rules: {
                    InstructorNameEdit: {
                        required: true,
                        minlength: 3,
                        maxlength: 20
                    },
                    InstructorPasswordEdit: {
                        required: true,
                        minlength: 6
                    }
                },
                messages: {
                    InstructorNameEdit: {
                        required: "Name field cannot be empty",
                        minlength: "Name must be at least 3 characters",
                        maxlength: "Name must not exceed 20 characters"
                    },
                    InstructorPasswordEdit: {
                        required: "Password field cannot be empty",
                        minlength: "Password must be at least 6 characters"
                    }
                }
            });



            $("#InstructorUpdateBtn").on('click', function (e) {
                e.preventDefault();
                if ($("#InstructorEditForm").valid()) {
                    var formData = new FormData($("#InstructorEditForm")[0]);

                    $.ajax({
                        url: $("#InstructorEditForm").attr("action"),
                        type: $("#InstructorEditForm").attr("method"),
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            alert(response.message);
                            setInterval(function () { location.reload(); }, 1000)

                        },
                        error: function (response) {
                            var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                            alert(errorMessage);
                            setInterval(function () { location.reload(); }, 1000)

                        }
                    });
                }
            });

            function showEditMessage(message) {
                $("#InstructorEditMsgModal #InstructorEditMsg").text(message);
                $("#InstructorEdit").modal("hide");
                $("#InstructorEditMsgModal").modal("show");
            }

        });


        $(document).ready(function () {


            var moduleIndex = 1; // Start index for new modules

            // Function to add a new module entry
            $('#add-module').on('click', function () {
                var newModuleEntry = $('.module-entry:first').clone(); // Clone the first module entry
                newModuleEntry.find('input').val(''); // Clear the values
                newModuleEntry.find('.remove-module').show(); // Show the remove button
                newModuleEntry.appendTo('#modulesContainer'); // Append to the container
                newModuleEntry.find('input[name="ModuleTitle[]"]').attr('name', 'ModuleTitle[]'); // Ensure name is consistent
                moduleIndex++; // Increment the module index
            });

            // Function to remove a module entry
            $(document).on('click', '.remove-module', function () {
                $(this).closest('.module-entry').remove();
            });

            //Instructor Add Course Form Submission
            $('#InstructorAddCourseForm').on('submit', function (e) {
                e.preventDefault();

                var formData = new FormData(this);

                $.ajax({
                    url: $(this).attr('action'),
                    type: $(this).attr('method'),
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert('Course and modules added successfully!');
                        $('#InstructorAddCourseForm')[0].reset(); // Reset form fields
                        $('#modulesContainer').empty(); // Clear modules
                        $('.module-entry:first').clone().appendTo('#modulesContainer'); // Restore the default module entry
                    },
                    error: function (xhr, status, error) {
                        alert('An error occurred: ' + error);
                    }
                });
            });


             // Form submission with AJAX
             $('#InstructorAddCourseForm').on('submit', function (e) {
                 e.preventDefault();

                 // Collect course details
                 const courseData = {
                     CourseName: $("#InstructorAddCourseTitle").val(),
                     CourseDescription: $("#InstructorAddCourseDescription").val(),
                     CourseCode: $("#InstructorAddCourseCode").val(),
                     CourseDuration: $("#InstructorAddCourseDuration").val(),
                     CourseLanguage: $("#courseSelectLanguage").val(),
                     CourseCategory: $("#courseSelectCategory").val()
                 };

                 // Collect modules and submodules
                 const modulesMap = {};
                 $('#modulesContainer .module-entry').each(function (index) {
                     const moduleTitle = $(this).find('input[name^="ModuleTitle"]').val();
                     if (moduleTitle) {
                         const subModules = [];
                         $(this).find('.submodule-entry').each(function (subIndex) {
                             const submoduleTitle = $(this).find('input[name^="SubmoduleTitle"]').val();
                             const submoduleFile = $(this).find('input[name^="SubmoduleFile"]')[0].files[0];
                             if (submoduleTitle) {
                                 const submodule = {
                                     Title: submoduleTitle,
                                     File: submoduleFile
                                 };
                                 subModules.push(submodule);
                             }
                         });
                         modulesMap[moduleTitle] = subModules;
                     }
                 });

                 // Log course data and modules as JSON
                 console.log('Course Data (JSON):', JSON.stringify(courseData, null, 2));
                 console.log('Modules Map (JSON):', JSON.stringify(modulesMap, null, 2));

                 // Combine course data with modules
                 const formData = new FormData();
                 formData.append('CourseData', JSON.stringify(courseData));

                 // Append modules with files
                 Object.keys(modulesMap).forEach((moduleName, index) => {
                     modulesMap[moduleName].forEach((submodule, subIndex) => {
                         formData.append(`Modules[${moduleName}][${subIndex}].Title`, submodule.Title);
                         if (submodule.File) {
                             formData.append(`Modules[${moduleName}][${subIndex}].File`, submodule.File);
                         }
                     });
                 });

                 // Log FormData content
                 const formDataObj = {};
                 for (let pair of formData.entries()) {
                     if (pair[1] instanceof File) {
                         formDataObj[pair[0]] = `File: ${pair[1].name}`;
                     } else {
                         formDataObj[pair[0]] = pair[1];
                     }
                 }
                 console.log('FormData (JSON):', JSON.stringify(formDataObj, null, 2));

                         // Submit the data
                         $.ajax({
                             url: $('#InstructorAddCourseForm').attr('action'),
                             type: $('#InstructorAddCourseForm').attr('method'),
                             data: formData,
                             contentType: false,
                             processData: false,
                             success: function (response) {
                                 $("#InsLearMsgModal .modal-body").text(response.message);
                                 $("#InstructorAddCourse").modal("hide");
                                 $('#InstructorAddCourse').on('hidden.bs.modal', function () {
                                     $("#InsLearMsgModal").modal("show");
                                 });
                             },
                             error: function (response) {
                                 const errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                                 $("#InsLearMsgModal .modal-body").text(errorMessage);
                                 $("#InstructorAddCourse").modal("hide");
                                 $('#InstructorAddCourse').on('hidden.bs.modal', function () {
                                     $("#InsLearMsgModal").modal("show");
                                 });
                             }
                         });
             });



        });

    </script>
</body>
</html>
