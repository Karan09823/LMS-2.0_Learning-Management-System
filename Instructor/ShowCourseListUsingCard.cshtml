@model LMS.Models.CourseData
@{
    Layout = null;
    var instructorObject = ViewBag.instructor;
    var moduleList = ViewBag.modulelist as List<LMS.Models.ModuleData>;
    var courseinfo = ViewBag.course;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>LMS : Instructor_CourseDetails</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="~/Content/SideBar-Navbar/navbarcommon.css" rel="stylesheet" />
    <style>


        .form-control {
            width: 400px;
        }

        .container {
            max-width: 750px;
        }

        .accordion-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .button-container {
            display: flex;
            gap: 10px;
        }

        .icon-link {
            display: inline-flex;
            align-items: center;
            text-decoration: none;
            color: inherit;
            margin-left: auto;
        }

      

    </style>

</head>
<body>

    @Html.Partial("_InstructorModals")
    @Html.Partial("_InstructorLayout")

    <!--banner-->
    <section class="dashboard">
        <div class="top">
            <i class="company-logo">
                <img src="~/HomeBanner/lms_logo-removebg-preview.png" />
            </i>
            <div class="profile">
                <span class="link-name mx-4">@instructorObject.InstructorName</span>
                <img src="~/HomeBanner/blank-profile-picture-973460_1280.png" alt="Profile Picture" />
            </div>
        </div>



        <!--course detail-->
        <div class="container-fluid mt-1" style="background-color:lightgray; border-radius:5px 5px 5px 5px;">

            <h1>@Model.CourseName</h1>
            <p>Course Code: @Model.CourseCode</p>
            <p>Description: @Model.CourseDescription</p>

        </div>

        <!--add module-->
        <div class="container p-2 mx-0  mb-2 rounded shadow-sm bg-white">
            <h5 class="mx-3">Add Module</h5>
            <form id="AddModuleform" class="d-flex align-items-center" method="post" action="@Url.Action("AddCourseModule","Instructor")">
                <input type="hidden" name="AddModuleCourseid" value="@Model.CourseId" />
                <label class="mx-3 mb-2">Enter Module Name:</label>
                <input type="text" class="form-control" name="AddModuleName" required autocomplete="off" />
                <button class="btn btn-success mx-3">Add Module</button>
            </form>
        </div>

        <!--module and submodule details-->
        <div class="accordion accordion-flush mx-0" id="accordionFlushExample">
            @foreach (var module in moduleList)
            {
                <div class="accordion-item">
                    <h2 class="accordion-header" id="flush-heading-@module.ModuleId">

                        <div class="d-flex align-items-center mx-2">
                            <button class="btn-sm btn-warning me-2" data-bs-toggle="modal" data-bs-target="#updateModuleModal" onclick="openUpdateModal('@module.ModuleId', '@module.ModuleName', '@Model.CourseId')">Update</button>
                            <button class="btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModuleModal" onclick="openDeleteModal('@module.ModuleId', '@Model.CourseId')">Delete</button>
                        </div>


                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-@module.ModuleId" aria-expanded="false" aria-controls="flush-collapse-@module.ModuleId">
                            @module.ModuleName

                        </button>



                    </h2>
                    <div id="flush-collapse-@module.ModuleId" class="accordion-collapse collapse" aria-labelledby="flush-heading-@module.ModuleId" data-bs-parent="#accordionFlushExample">
                        <div class="accordion-body">
                            @if (module.SubModules != null && module.SubModules.Any())
                            {
                                foreach (var submodule in module.SubModules)
                                {
                                    <div>
                                        <h5>
                                            @if (!string.IsNullOrEmpty(submodule.FileUrl))
                                            {

                                                <table class="table">

                                                    <tbody>
                                                        <tr>
                                                            <td>
                                                                <a href="@Url.Content(submodule.FileUrl)" target="_blank">
                                                                    <i class="fa-solid fa-file"></i>
                                                                    <span class="mx-1"></span>
                                                                    @submodule.SubmoduleName
                                                                </a>
                                                            </td>
                                                            <td class="text-end">
                                                                <div class="d-flex justify-content-end">
                                                                    <button class="btn-sm btn-warning me-2"
                                                                            data-bs-toggle="modal"
                                                                            data-bs-target="#updateSubModuleModal"
                                                                            onclick="PopulateSubmodule('@submodule.SubmoduleName', '@module.ModuleId', '@submodule.SubModuleId')">
                                                                        Update
                                                                    </button>
                                                                    <button class="btn-sm btn-danger"
                                                                            data-bs-toggle="modal"
                                                                            data-bs-target="#deleteSubModuleModal"
                                                                            onclick="openDeleteSubmodal('@module.ModuleId', '@submodule.SubModuleId')">
                                                                        Delete
                                                                    </button>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>




                                            }
                                            else
                                            {
                                                @submodule.SubmoduleName
                                                <span class="text-muted">(No file available)</span>
                                            }
                                        </h5>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No submodules available.</p>
                            }
                        </div>
                        <!--add submodule section-->
                        <div class="submodule-form-container mt-3">
                            <form method="post" id="SubmoduleForm" enctype="multipart/form-data" action="@Url.Action("AddSubmodule", "Instructor")" class="d-flex align-items-center ">
                                <input type="hidden" name="ModuleId" value="@module.ModuleId" />
                                <input type="hidden" name="CourseID" value="@Model.CourseId" />
                                <div class="form-group mx-3 mb-2">
                                    <label for="subModuleName" class="form-label ">Submodule Name:</label>
                                    <input type="text" id="subModuleName" name="SubModuleName" class="form-control" required autocomplete="off" />
                                </div>
                                <div class="form-group mx-3 mb-2">
                                    <label for="resourceFile" class="form-label ">Resources:</label>
                                    <input type="file" id="resourceFile" name="ResourceFile" class="form-control" required autocomplete="off" />

                                </div>

                                
                                    <button type="submit" id="addResourceBtn" class="btn btn-success mt-4" style="max-width:200px;">Add Resource</button>
                                
                                


                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>

    </section>








    <!-- Update Module Modal -->
    <div class="modal fade" id="updateModuleModal" tabindex="-1" aria-labelledby="updateModuleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateModuleLabel">Update Module</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="updateModuleForm">
                        <div class="mb-3">
                            <input type="hidden" id="moduleId" name="moduleId" />
                            <input type="hidden" id="courseId" name="courseId" />
                            <label for="moduleName" class="form-label">Module Name</label>
                            <input type="text" class="form-control" style="max-width:470px;" id="moduleName" name="moduleName" required autocomplete="off" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-warning" onclick="submitUpdate()">Update</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Update SubModule Modal -->
    <div class="modal fade" id="updateSubModuleModal" tabindex="-1" aria-labelledby="updateSubModuleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateSubModuleLabel">Update SubModule</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p style="color:red; font-size:10px;  margin-left:10px;">* If you want to Update the SubmoduleName then You should also provide the previous uploaded file </p>
                    <form id="updateSubModuleForm" method="post" action="@Url.Action("UpdateSubmodule", "Instructor")">
                        <div class="mb-3">
                            <input type="hidden" name="ModuleId" id="ModuleId" value="" />
                            <input type="hidden" name="SubModuleId" id="SubModuleId" value="" />
                            <label for="SubmoduleName" class="form-label">SubModule Name</label>
                            <input type="text" class="form-control" style="max-width:470px;" id="SubmoduleName" name="SubmoduleName" required autocomplete="off" />
                            <label for="SubmoduleFile" class="form-label mt-3">Update Resource</label>
                            <input type="file" class="form-control" value="" style="max-width:470px;" id="SubmoduleFile" name="SubmoduleFile" required autocomplete="off" />
                        </div>
                    </form>

                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-warning" onclick="submitSubModuleUpdate()">Update</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Module Confirmation Modal -->
    <div class="modal fade" id="deleteModuleModal" tabindex="-1" aria-labelledby="deleteModuleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModuleLabel">Delete Module</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this module?
                </div>
                <div class="modal-footer">
                    <form id="deleteModuleForm">
                        <input type="hidden" id="deleteModuleId" name="moduleId" />
                        <input type="hidden" id="deleteCourseId" name="courseId" />
                    </form>

                    <button type="button" class="btn btn-danger" onclick="submitDelete()">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete SubModule Confirmation Modal -->
    <div class="modal fade" id="deleteSubModuleModal" tabindex="-1" aria-labelledby="deleteSubModuleLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteSubModuleLabel">Delete Module</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this Submodule?
                </div>
                <div class="modal-footer">
                    <form id="deleteSubModuleForm">
                        <input type="hidden" id="deleteModuleId" name="moduleId" value="" />
                        <input type="hidden" id="deleteSubmoduleId" name="submoduleId" value="" />
                    </form>

                    <button type="button" class="btn btn-danger" onclick="DeleteSubModule()">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script>

        //update modal
        function openUpdateModal(moduleId, moduleName, courseId) {
            document.getElementById("moduleId").value = moduleId;
            document.getElementById("moduleName").value = moduleName;
            document.getElementById("courseId").value = courseId;
        }
        //delete modal
        function openDeleteModal(moduleId, courseId) {
            document.getElementById("deleteModuleId").value = moduleId;
            document.getElementById("deleteCourseId").value = courseId;
        }

        //module update function
        function submitUpdate() {
            var form = document.getElementById("updateModuleForm");
            var data = new FormData(form);

            fetch("@Url.Action("UpdateModule", "Instructor")", {
                method: "POST",
                body: data
            })
            .then(response => {
                if (response.ok) {
                    $('#updateModuleModal').modal('hide');
                    alert("Module Updated Successfully");

                    location.reload();
                } else {
                    $('#updateModuleModal').modal("hide");
                    alert("Failed to update module.");
                    location.reload();
                }
            })
            .catch(error => console.error('Error:', error));
        }

        //delete module function
         function submitDelete() {
             var form = document.getElementById("deleteModuleForm");
             var data = new FormData(form);

             fetch("@Url.Action("DeleteModule", "Instructor")", {
                 method: "POST",
                 body: data
             })
             .then(response => {
                 if (response.ok) {
                     $('#deleteModuleModal').modal("hide");
                     alert("Module Deleted Successfully");
                     location.reload();
                 } else {
                     $('#deleteModuleModal').modal('hide');
                     alert("Failed to delete module.");
                     location.reload();
                 }
             })
             .catch(error => console.error('Error:', error));
        }

        //update submodule function
        function submitSubModuleUpdate() {
            var form = document.getElementById("updateSubModuleForm");
            var data = new FormData(form);

            fetch("@Url.Action("UpdateSubmodule", "Instructor")", {
                method: "POST",
                body: data
            })
            .then(response => {
                if (response.ok) {
                    $('#updateSubModuleModal').modal('hide');
                    alert("Submodule Updated Successfully");
                    location.reload();
                } else {
                    return response.json().then(data => {
                        alert(data.message || "Failed to update submodule.");
                    });
                }
            })
            .catch(error => console.error('Error:', error));
        }

        //delete submodule function
         function DeleteSubModule() {
              var form = document.getElementById("deleteSubModuleForm");
              var data = new FormData(form);

              fetch("@Url.Action("DeleteSubModule", "Instructor")", {
                  method: "POST",
                  body: data
              })
              .then(response => {
                  if (response.ok) {
                      $('#deleteSubModuleModal').modal("hide");
                      alert("SubModule deleted successfully.");
                      location.reload();
                  } else {
                      $('#deleteSubModuleModal').modal('hide');
                      alert("Failed to delete Submodule.");
                      location.reload();
                  }
              })
              .catch(error => console.error('Error:', error));
        }

        //populate submodule function
        function PopulateSubmodule(submodulename, moduleid, submoduleid,submodulefile) {
            document.getElementById("SubmoduleName").value = submodulename;
            document.getElementById("SubModuleId").value = submoduleid;
            document.getElementById("ModuleId").value = moduleid;

        }

        //populate delete submodule modal
        function openDeleteSubmodal(moduleid, submoduleid) {
            document.getElementById("deleteModuleId").value = moduleid;
            document.getElementById("deleteSubmoduleId").value = submoduleid;
        }




        $(document).ready(function () {
            //submit submodule data
            $('#SubmoduleForm').on('submit', function (e) {
                e.preventDefault();

                var form = $(this);
                var formData = new FormData(form[0]);

                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert(response.message);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error occurred: ", error);
                    }
                });
            });

            //submit module data
            $('#AddModuleform').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var formData = new FormData(form[0]);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert(response.message);
                    }, error: function (xhr, status, error) {
                        alert("Error occured" + error);
                    }

                });

            })

        });


        $(document).ready(function () {

            $("#logoutButton").on('click', function () {
                $.ajax({
                    url: '@Url.Action("Instructorlogout", "Instructor")',
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            window.location.href = '@Url.Action("Welcome", "Home")';
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                    }
                });
            });

            // Instructor Edit Form Validation and Submission
            $("#InstructorEditForm").validate({
                errorClass: "error",
                rules: {
                    InstructorNameEdit: {
                        required: true,
                        minlength: 3,
                        maxlength: 20
                    },
                    InstructorPasswordEdit: {
                        required: true,
                        minlength: 6
                    }
                },
                messages: {
                    InstructorNameEdit: {
                        required: "Name field cannot be empty",
                        minlength: "Name must be at least 3 characters",
                        maxlength: "Name must not exceed 20 characters"
                    },
                    InstructorPasswordEdit: {
                        required: "Password field cannot be empty",
                        minlength: "Password must be at least 6 characters"
                    }
                }
            });

            $("#InstructorUpdateBtn").on('click', function (e) {
                e.preventDefault();
                if ($("#InstructorEditForm").valid()) {
                    var formData = new FormData($("#InstructorEditForm")[0]);

                    $.ajax({
                        url: $("#InstructorEditForm").attr("action"),
                        type: $("#InstructorEditForm").attr("method"),
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            alert(response.message);
                            setInterval(function () { location.reload(); }, 1000)

                        },
                        error: function (response) {
                            var errorMessage = response.responseJSON ? response.responseJSON.message : "An error occurred";
                            alert(errorMessage);
                            setInterval(function () { location.reload(); }, 1000)

                        }
                    });
                }
            });

            function showEditMessage(message) {
                $("#InstructorEditMsgModal #InstructorEditMsg").text(message);
                $("#InstructorEdit").modal("hide");
                $("#InstructorEditMsgModal").modal("show");
            }
        });


    </script>
</body>
</html>
